[ ca ]
default_ca	= CA_default		# The default ca section

[ CA_default ]
dir = .                                # Where everything is kept
new_certs_dir	= $dir/certs
certs		    = $dir/certs		    # Where the issued certs are kept
database	    = $dir/index/index.txt	# database index file.
crlnumber	    = $dir/crl/crlnumber	# the current crl number
crl		        = $dir/ca/ca.crl
crl		        = $dir/ca/crl.pem	    # The current CRL
private_key	    = $dir/ca/ca.key        # The private key

default_days	= 365			    # how long to certify for
default_crl_days= 30			    # how long before next CRL
default_md	= default		        # use public key default MD
preserve	= no			        # keep passed DN ordering

[ req ]
# Options for the `req` tool: PKCS#10 certificate request and certificate generating utility. (`man req`)
distinguished_name	= req_distinguished_name
# does not prompt for dn fields
prompt			= no

# Default md (message digest to use for the hash/fingerprint)
# option: SHA-1 is deprecated, so use SHA-2 family instead
# TLS server certificates and issuing CAs must use a hash algorithm from the SHA-2 family in the signature algorithm
# https://support.apple.com/en-us/HT210176
default_md          = sha256

[ req_distinguished_name ]
# CN used to create the CA root
C			= UA
O			= Organization Name
#CN			= Common Name

[ client_extensions ]
# List of extensions to add to certificate generated
# It can be overridden by the -extensions command line switch.
# See the (`man x509v3_config`) manual page for details of the extension section format.
# See https://www.openssl.org/docs/man1.0.2/man5/x509v3_config.html
# for explanation

# A CA certificate must contains: CA: true
basicConstraints = critical, CA:false

# Purposes for which the certificate public key can be used for
# object short names or the dotted numerical form of OIDs (object identifier)
# OpenSSL has an internal table of OIDs that are generated when the library is built, and their corresponding NIDs are available as defined constants
# For example the OID for commonName has the following definitions:
#  * SN_commonName                   "CN"
#  * LN_commonName                   "commonName"
#  * NID_commonName                  13
#
# Example: new dotted NID object initialization
# int new_nid = OBJ_create("1.2.3.4", "NewOID", "New Object Identifier");
# ASN1_OBJECT *obj = OBJ_nid2obj(new_nid);
keyUsage = critical, digitalSignature
# Used for client auth / email protection
extendedKeyUsage=clientAuth

# as seen https://www.openssl.org/docs/man1.0.2/man1/openssl-req.html under v3_ca example
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer:always